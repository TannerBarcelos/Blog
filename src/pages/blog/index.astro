---
import BaseHead from '../../components/BaseHead.astro'
import Header from '../../components/Header.astro'
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts'
import { getCollection } from 'astro:content'
import FormattedDate from '../../components/FormattedDate.astro'
import toUnique from '../../utils/toUnique.js'

const blogCollection = await getCollection('blog')
const blogPosts = blogCollection.sort(
  (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf(),
)

// Get all the topics from the blog posts and remove duplicates. (This allows us to create a section for each topic.)
const topics = toUnique(blogPosts.map((post) => post.data.topic))
---

<!DOCTYPE html>
<html lang='en'>
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      ul {
        list-style-type: none;
        padding: unset;
      }
      ul li {
        display: flex;
        align-items: center;
        padding: 0 1rem;
      }
      ul li :global(time) {
        flex: 0 0 130px;
        font-style: italic;
        color: #595959;
      }
      ul li a {
        color: rgb(35, 175, 126);
        font-weight: bolder;
      }

      h1 {
        margin-top: 3rem;
      }
    </style>
  </head>
  <body>
    <Header />
    <main class='blog-list'>
      <!-- For every topic, create a new section and then output every blogpost for that topic. -->
      {
        topics.map((topic) => (
          <section>
            <h1>{topic}</h1>
            <ul>
              {blogPosts
                .filter((post) => post.data.topic === topic)
                .map((post) => (
                  <li>
                    <FormattedDate date={post.data.pubDate} />
                    <a href={`/blog/${post.slug}/`}>{post.data.title}</a>
                  </li>
                ))}
            </ul>
          </section>
        ))
      }
    </main>
  </body>
</html>
